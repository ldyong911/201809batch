<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- dataSource : db.properties -->
	<context:property-placeholder location="classpath:kr/or/ddit/config/db/db.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:kr/or/ddit/config/db/mybatis-config.xml"/>
	</bean>
	
	<!-- reader -->
	<bean id="yogultItemReader" class="org.mybatis.spring.batch.MyBatisCursorItemReader">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<property name="queryId" value="yogult.getCycleList"/>
	</bean>
	
	<!-- processor -->
	<bean id="yogultItemProcessor" class="kr.or.ddit.yogult.batch.YogultItemProcessor" scope="step"/>
	
	<!-- writer -->
	<bean id="yogultItemWriter" class="kr.or.ddit.yogult.batch.CustomMyBatisBatchItemWriter">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<property name="statementId" value="yogult.mergeDaily"/>
	</bean>
	
	<batch:job-repository id="jobRepository" data-source="dataSource" transaction-manager="transactionManager"/>
	
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"/>
	</bean>
	
	<!-- batch job 등록 -->
	<!-- restartable, allow-start-if-complete 옵션이 true여야 1번 실행후 계속 실행 -->
	<batch:job id="yogultJob" restartable="true">
		<batch:step id="step1" allow-start-if-complete="true">
			<batch:tasklet>
				<!-- commit-interval은 chunk 사이즈 -->
				<batch:chunk reader="yogultItemReader" processor="yogultItemProcessor" writer="yogultItemWriter" commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<!-- 스케줄러 등록 -->
	<bean id="yogultTsk" class="kr.or.ddit.yogult.batch.YogultTask"/>
	<task:scheduler id="scheduler"/>
	<task:executor id="executor"/>
	<task:annotation-driven scheduler="scheduler" executor="executor"/>
</beans>